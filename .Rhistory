# 2 1041
# ...
#where 'id' is the monitor ID number and 'nobs' is the number of complete cases
#Check directory and create a list of files
n <- 0
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in id){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
n <- n + nrow(complete.cases(tempDF))
}
#return
n
}
data <- data.frame(c(1,2,3),c(3,4,5))
data
rbind(data,c(2,3))
class(data)
str(data)
attributes(data)
unclass(data)
complete <- function(directory,id=1:332){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'id' is an integer vector indicating the monitor ID numbers to be used
#Return a data frame of the form:
#id nobs
# 1  117
# 2 1041
# ...
#where 'id' is the monitor ID number and 'nobs' is the number of complete cases
#Check directory and create a list of files
n <- 0
df <- data.frame()
names(df) <- c('id','nobs')
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in id){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
n <- nrow(complete.cases(tempDF))
rbind(df,c(i,n))
}
#return
df
}
complete("specdata",1)
data <- data.frame(2)
data <- data.frame(NULL,names= c("ID","nobs"))
data <- data.frame(names= c("ID","nobs"))
data
data <- data.frame(1:2,names= c("ID","nobs"))
data
str(data.frame)
?data.frame
data <- data.frame()
rbind(data,c(2,3))
data <- data.frame()
names(data)
names(data) <- c(1,2)
pollutantmean <- function(directory, pollutant, id=1:332){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'pollutant' is a character vector of length 1 indicating the name of the pollutant for
#which we will calculate the mean; either "sulfate" or "nitrate"
#'id' is an integer vector indicating the monitor ID numbers to be used
#Return the mean of the pollutant across all monitors list in the 'id' vector (ignoring
#NA values)
#NOTE: Do not round the result
#Check directory and create a list of files
sumValue <- 0
n <- 0
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in id){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
sumValue <- sumValue + sum(tempDF[pollutant], na.rm = T)
n <- n + nrow(tempDF[which(!is.na(tempDF[pollutant])),])
}
#return
sumValue/n
}
pollutantmean("specdata","nitrate",23)
complete <- function(directory,id=1:332){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'id' is an integer vector indicating the monitor ID numbers to be used
#Return a data frame of the form:
#id nobs
# 1  117
# 2 1041
# ...
#where 'id' is the monitor ID number and 'nobs' is the number of complete cases
#Check directory and create a list of files
n <- 0
df <- data.frame()
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in id){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
n <- nrow(complete.cases(tempDF))
rbind(df,c(i,n))
}
#return
names(df) <- c("id","nobs")
df
}
complete("specdata",1)
data <- read.csv(file.path("specdata/001.csv"))
length(complete.cases(data))
class(complete.cases(data))
head(complete.cases(data))
head(data)
pollutantmean <- function(directory, pollutant, id=1:332){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'pollutant' is a character vector of length 1 indicating the name of the pollutant for
#which we will calculate the mean; either "sulfate" or "nitrate"
#'id' is an integer vector indicating the monitor ID numbers to be used
#Return the mean of the pollutant across all monitors list in the 'id' vector (ignoring
#NA values)
#NOTE: Do not round the result
#Check directory and create a list of files
sumValue <- 0
n <- 0
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in id){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
sumValue <- sumValue + sum(tempDF[pollutant], na.rm = T)
n <- n + nrow(tempDF[which(!is.na(tempDF[pollutant])),])
}
#return
sumValue/n
}
pollutantmean("specdata","nitrate",23)
complete <- function(directory,id=1:332){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'id' is an integer vector indicating the monitor ID numbers to be used
#Return a data frame of the form:
#id nobs
# 1  117
# 2 1041
# ...
#where 'id' is the monitor ID number and 'nobs' is the number of complete cases
#Check directory and create a list of files
n <- 0
df <- data.frame()
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in id){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
n <- sum(complete.cases(tempDF))
rbind(df,c(i,n))
}
#return
names(df) <- c("id","nobs")
df
}
complete("specdata",1)
sum(complete.cases(data))
complete <- function(directory,id=1:332){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'id' is an integer vector indicating the monitor ID numbers to be used
#Return a data frame of the form:
#id nobs
# 1  117
# 2 1041
# ...
#where 'id' is the monitor ID number and 'nobs' is the number of complete cases
#Check directory and create a list of files
n <- 0
df <- data.frame()
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in id){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
n <- sum(complete.cases(tempDF))
rbind(df,c(i,n))
}
#return
df
}
complete("specdata",1)
complete <- function(directory,id=1:332){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'id' is an integer vector indicating the monitor ID numbers to be used
#Return a data frame of the form:
#id nobs
# 1  117
# 2 1041
# ...
#where 'id' is the monitor ID number and 'nobs' is the number of complete cases
#Check directory and create a list of files
n <- 0
df <- data.frame()
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in id){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
n <- sum(complete.cases(tempDF))
df <- rbind(df,c(i,n))
}
#return
df
}
complete("specdata",1)
complete <- function(directory,id=1:332){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'id' is an integer vector indicating the monitor ID numbers to be used
#Return a data frame of the form:
#id nobs
# 1  117
# 2 1041
# ...
#where 'id' is the monitor ID number and 'nobs' is the number of complete cases
#Check directory and create a list of files
n <- 0
df <- data.frame()
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in id){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
n <- sum(complete.cases(tempDF))
df <- rbind(df,c(i,n))
}
#return
names(df) <- c("id","nobs")
df
}
complete("specdata",1)
complete("specdata",c(2, 4, 8, 10, 12))
complete("specdata",30:25)
t <- c()
append(t,9)
t<- append(t,9)
t<- append(t,9)
t<- append(t,9)
rm(t)
source("corr.R")
?cor
sum(data["sulfate"])
corr <- function(directory, threshold = 0){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'threshold' is a numeric vector of length 1 indicating the number of completely observed
#observations (on all variables) required to compute the correlation between nitrate and
#sulfate; the default is 0
#Return a numeric vector of correlations
#NOTE: Do not round the result !
#Check directory and create a list of files
n <- 0
correl <- c(0)
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in seq_len(files)){
if(complete(directory,i)["nobs"]>threshold){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
correl <- append(correl, cor(tempDF["nitrate"],tempDF["sulfate"]))
}
}
#return
correl
}
corr("specdata",150)
corr <- function(directory, threshold = 0){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'threshold' is a numeric vector of length 1 indicating the number of completely observed
#observations (on all variables) required to compute the correlation between nitrate and
#sulfate; the default is 0
#Return a numeric vector of correlations
#NOTE: Do not round the result !
#Check directory and create a list of files
n <- 0
correl <- c(0)
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in seq_len(files)){
if(complete(directory,i)["nobs"]>threshold){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
correl <- append(correl, cor(tempDF["nitrate"],tempDF["sulfate"], na.rm=TRUE))
}
}
#return
correl
}
corr("specdata",150)
files <- list.files("specdata")
length(files)
seq_len(files)
seq_len(3)
corr <- function(directory, threshold = 0){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'threshold' is a numeric vector of length 1 indicating the number of completely observed
#observations (on all variables) required to compute the correlation between nitrate and
#sulfate; the default is 0
#Return a numeric vector of correlations
#NOTE: Do not round the result !
#Check directory and create a list of files
n <- 0
correl <- c(0)
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in seq_len(length(files)){
if(complete(directory,i)["nobs"]>threshold){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
correl <- append(correl, cor(tempDF["nitrate"],tempDF["sulfate"], na.rm=TRUE))
}
}
#return
correl
}
corr <- function(directory, threshold = 0){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'threshold' is a numeric vector of length 1 indicating the number of completely observed
#observations (on all variables) required to compute the correlation between nitrate and
#sulfate; the default is 0
#Return a numeric vector of correlations
#NOTE: Do not round the result !
#Check directory and create a list of files
n <- 0
correl <- c(0)
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in seq_len(length(files))){
if(complete(directory,i)["nobs"]>threshold){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
correl <- append(correl, cor(tempDF["nitrate"],tempDF["sulfate"], na.rm=TRUE))
}
}
#return
correl
}
corr("specdata",150)
cor(data["sulfate"],data["nitrate"])
cor(data["sulfate"],data["nitrate"], na.rm=T)
cor(data["sulfate"],data["nitrate"], na.rm=TRUE)
cor(x = data["sulfate"], y = data["nitrate"], na.rm=TRUE)
cor(x = data["sulfate"], y = data["nitrate"])
complete.cases(data)
corr <- function(directory, threshold = 0){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'threshold' is a numeric vector of length 1 indicating the number of completely observed
#observations (on all variables) required to compute the correlation between nitrate and
#sulfate; the default is 0
#Return a numeric vector of correlations
#NOTE: Do not round the result !
#Check directory and create a list of files
n <- 0
correl <- c(0)
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in seq_len(length(files))){
if(complete(directory,i)["nobs"]>threshold){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
tempDF <- tempDF[which(complete.cases(tempDF))]
correl <- append(correl, cor(tempDF["nitrate"],tempDF["sulfate"]))
}
}
#return
correl
}
corr <- function(directory, threshold = 0){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'threshold' is a numeric vector of length 1 indicating the number of completely observed
#observations (on all variables) required to compute the correlation between nitrate and
#sulfate; the default is 0
#Return a numeric vector of correlations
#NOTE: Do not round the result !
#Check directory and create a list of files
n <- 0
correl <- c(0)
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in seq_len(length(files))){
if(complete(directory,i)["nobs"]>threshold){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
tempDF <- tempDF[which(complete.cases(tempDF)),]
correl <- append(correl, cor(tempDF["nitrate"],tempDF["sulfate"]))
}
}
#return
correl
}
corr("specdata",150)
corr <- function(directory, threshold = 0){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'threshold' is a numeric vector of length 1 indicating the number of completely observed
#observations (on all variables) required to compute the correlation between nitrate and
#sulfate; the default is 0
#Return a numeric vector of correlations
#NOTE: Do not round the result !
#Check directory and create a list of files
n <- 0
correl <- c()
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in seq_len(length(files))){
if(complete(directory,i)["nobs"]>threshold){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
tempDF <- tempDF[which(complete.cases(tempDF)),]
correl <- append(correl, cor(tempDF["nitrate"],tempDF["sulfate"]))
}
}
#return
if(length(correl)==0){
correl <- 0
}
else{correl}
}
head(corr("specdata",150))
cr <- corr("specdata",150)
rm(files)
summary(cr)
cr <- corr("specdata",400)
summary(cr)
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","sulfate",34)
pollutantmean("specdata","nitrate")
cc<- complete("specdata",c(6,10,20,34,100,200,310))
print(cc$nobs)
cc<- complete("specdata",54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata",332:1)
use <- sample(332,10)
print(cc[use,nobs])
print(cc[use,"nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr),5)],4)
out
cr <- corr("specdata",129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n,round(cr[sample(n,5)],4))
out
cr <- corr("specdata",2000)
n <- length(cr)
cr <- corr("specdata",1000)
cr <- sort(cr)
print(c(n,round(cr,4)))
corr <- function(directory, threshold = 0){
#'directory' is a character vector of length 1 indicating the location of the CSV files
#'threshold' is a numeric vector of length 1 indicating the number of completely observed
#observations (on all variables) required to compute the correlation between nitrate and
#sulfate; the default is 0
#Return a numeric vector of correlations
#NOTE: Do not round the result !
#Check directory and create a list of files
n <- 0
correl <- c()
if(dir.exists(directory)){
files <- list.files(directory)
}
#iterate through files based on IDs
for(i in seq_len(length(files))){
if(complete(directory,i)["nobs"]>threshold){
path <- paste(directory,"/",files[i], sep = "")
tempDF <- read.csv(file.path(path),colClasses = c("Date","numeric","numeric","integer"))
tempDF <- tempDF[which(complete.cases(tempDF)),]
correl <- append(correl, cor(tempDF["nitrate"],tempDF["sulfate"]))
}
}
#return
correl
}
